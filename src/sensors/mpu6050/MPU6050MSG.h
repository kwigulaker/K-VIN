// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file MPU6050MSG.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _FAST_DDS_GENERATED_MPU6050MSG_H_
#define _FAST_DDS_GENERATED_MPU6050MSG_H_


#include <stdint.h>
#include <array>
#include <string>
#include <vector>
#include <map>
#include <bitset>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(MPU6050MSG_SOURCE)
#define MPU6050MSG_DllAPI __declspec( dllexport )
#else
#define MPU6050MSG_DllAPI __declspec( dllimport )
#endif // MPU6050MSG_SOURCE
#else
#define MPU6050MSG_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define MPU6050MSG_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
} // namespace fastcdr
} // namespace eprosima


/*!
 * @brief This class represents the structure MPU6050MSG defined by the user in the IDL file.
 * @ingroup MPU6050MSG
 */
class MPU6050MSG
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport MPU6050MSG();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~MPU6050MSG();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object MPU6050MSG that will be copied.
     */
    eProsima_user_DllExport MPU6050MSG(
            const MPU6050MSG& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object MPU6050MSG that will be copied.
     */
    eProsima_user_DllExport MPU6050MSG(
            MPU6050MSG&& x);

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object MPU6050MSG that will be copied.
     */
    eProsima_user_DllExport MPU6050MSG& operator =(
            const MPU6050MSG& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object MPU6050MSG that will be copied.
     */
    eProsima_user_DllExport MPU6050MSG& operator =(
            MPU6050MSG&& x);

    /*!
     * @brief Comparison operator.
     * @param x MPU6050MSG object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const MPU6050MSG& x) const;

    /*!
     * @brief Comparison operator.
     * @param x MPU6050MSG object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const MPU6050MSG& x) const;

    /*!
     * @brief This function sets a value in member ax
     * @param _ax New value for member ax
     */
    eProsima_user_DllExport void ax(
            int16_t _ax);

    /*!
     * @brief This function returns the value of member ax
     * @return Value of member ax
     */
    eProsima_user_DllExport int16_t ax() const;

    /*!
     * @brief This function returns a reference to member ax
     * @return Reference to member ax
     */
    eProsima_user_DllExport int16_t& ax();

    /*!
     * @brief This function sets a value in member ay
     * @param _ay New value for member ay
     */
    eProsima_user_DllExport void ay(
            int16_t _ay);

    /*!
     * @brief This function returns the value of member ay
     * @return Value of member ay
     */
    eProsima_user_DllExport int16_t ay() const;

    /*!
     * @brief This function returns a reference to member ay
     * @return Reference to member ay
     */
    eProsima_user_DllExport int16_t& ay();

    /*!
     * @brief This function sets a value in member az
     * @param _az New value for member az
     */
    eProsima_user_DllExport void az(
            int16_t _az);

    /*!
     * @brief This function returns the value of member az
     * @return Value of member az
     */
    eProsima_user_DllExport int16_t az() const;

    /*!
     * @brief This function returns a reference to member az
     * @return Reference to member az
     */
    eProsima_user_DllExport int16_t& az();

    /*!
     * @brief This function sets a value in member gx
     * @param _gx New value for member gx
     */
    eProsima_user_DllExport void gx(
            int16_t _gx);

    /*!
     * @brief This function returns the value of member gx
     * @return Value of member gx
     */
    eProsima_user_DllExport int16_t gx() const;

    /*!
     * @brief This function returns a reference to member gx
     * @return Reference to member gx
     */
    eProsima_user_DllExport int16_t& gx();

    /*!
     * @brief This function sets a value in member gy
     * @param _gy New value for member gy
     */
    eProsima_user_DllExport void gy(
            int16_t _gy);

    /*!
     * @brief This function returns the value of member gy
     * @return Value of member gy
     */
    eProsima_user_DllExport int16_t gy() const;

    /*!
     * @brief This function returns a reference to member gy
     * @return Reference to member gy
     */
    eProsima_user_DllExport int16_t& gy();

    /*!
     * @brief This function sets a value in member gz
     * @param _gz New value for member gz
     */
    eProsima_user_DllExport void gz(
            int16_t _gz);

    /*!
     * @brief This function returns the value of member gz
     * @return Value of member gz
     */
    eProsima_user_DllExport int16_t gz() const;

    /*!
     * @brief This function returns a reference to member gz
     * @return Reference to member gz
     */
    eProsima_user_DllExport int16_t& gz();

    /*!
     * @brief This function sets a value in member timestamp
     * @param _timestamp New value for member timestamp
     */
    eProsima_user_DllExport void timestamp(
            int32_t _timestamp);

    /*!
     * @brief This function returns the value of member timestamp
     * @return Value of member timestamp
     */
    eProsima_user_DllExport int32_t timestamp() const;

    /*!
     * @brief This function returns a reference to member timestamp
     * @return Reference to member timestamp
     */
    eProsima_user_DllExport int32_t& timestamp();


    /*!
     * @brief This function returns the maximum serialized size of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const MPU6050MSG& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(
            eprosima::fastcdr::Cdr& cdr) const;

private:

    int16_t m_ax;
    int16_t m_ay;
    int16_t m_az;
    int16_t m_gx;
    int16_t m_gy;
    int16_t m_gz;
    int32_t m_timestamp;
};

#endif // _FAST_DDS_GENERATED_MPU6050MSG_H_